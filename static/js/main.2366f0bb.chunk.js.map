{"version":3,"sources":["sidebar/styles.js","sidebaritem/styles.js","sidebaritem/sidebaritem.js","helpers.js","sidebar/sidebar.js","editor/styles.js","editor/editor.js","App.js","serviceWorker.js","index.js"],"names":["styles","theme","root","backgroundColor","palette","background","paper","height","position","left","width","boxShadow","newChatBtn","borderRadius","unreadMessage","color","top","right","newNoteBtn","border","fontSize","sidebarContainer","marginTop","boxSizing","float","overflowY","overflowX","newNoteInput","margin","outline","padding","paddingLeft","newNoteSubmitBtn","listItem","cursor","textSection","maxWidth","deleteIcon","SidebarItemComponent","selectNote","n","i","props","deleteNote","note","window","confirm","title","str","this","_index","_note","classes","selectedNoteIndex","key","ListItem","className","selected","alignItems","onClick","ListItemText","primary","secondary","body","substring","replace","DeleteIcon","style","paddingRight","React","Component","withStyles","SidebarComponent","newNoteBtnClick","setState","addingNote","state","updateTitle","txt","newNote","notes","SidebarContainer","type","placeholder","onKeyUp","e","target","value","List","map","Divider","titleInput","editIcon","editorContainer","EditorComponent","componentDidMount","text","selectedNote","id","componentDidUpdate","updateBody","val","a","update","b","c","d","h","apply","f","g","arguments","clearTimeout","setTimeout","debounce","noteUpdate","EditorContainer","onChange","firebase","require","App","firestore","collection","onSnapshot","serverUpdate","docs","_doc","data","console","log","indexedDB","noteObj","doc","timestamp","FieldValue","serverTimestamp","add","newFromDB","newID","newNoteIndex","indexOf","filter","noteIndex","length","delete","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2366f0bb.chunk.js","sourcesContent":["const styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height: '100%',\n      position: 'absolute',\n      left: '0',\n      width: '20%',\n      boxShadow: '0px 0px 2px black'\n    },\n    newChatBtn: {\n      borderRadius: '0px'\n    },\n    unreadMessage: {\n      color: 'red',\n      position: 'absolute',\n      top: '0',\n      right: '5px'\n    },\n    newNoteBtn: {\n      width: '100%',\n      height: '50px',\n      border:'1px',\n      borderRadius: '0px',\n      fontSize: '1em',\n      backgroundColor: 'rgb(69, 98, 188)',\n      color: 'white',\n      '&:hover': {\n        backgroundColor: 'rgb(26,31,39)',\n        \n      }\n    },\n    sidebarContainer: {\n      marginTop: '0px',\n      width: '300px',\n      height: '100%',\n      boxSizing: 'border-box',\n      float: 'left',\n      overflowY: 'scroll',\n      overflowX: 'hidden'\n    },\n    newNoteInput: {\n      width: '100%',\n      margin: '0px',\n      height: '35px',\n      outline: 'none',\n      border: 'none',\n      padding:'7px',\n      fontSize:'0.9em',\n      paddingLeft: '5px'\n      \n    },\n    newNoteSubmitBtn: {\n      width: '100%',\n      backgroundColor: '#28787c',\n      borderRadius: '0px',\n      fontSize:'0.8em',\n      padding:'10px',\n      border:'0',\n      color: 'white'\n    }\n  });\n  \n  export default styles;","const styles = theme => ({\n    listItem: {\n      cursor: 'pointer'\n    },\n    textSection: {\n      maxWidth: '85%'\n    },  \n    deleteIcon: {\n      position: 'absolute',\n      right: '5px',\n      top: 'calc(50% - 15px)',\n      right:'1em',\n      top:'0.5em',\n      '&:hover': {\n        color: 'red'\n      }\n    }\n  });\n  \n  export default styles;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { removeHTMLTags } from '../helpers';\n\nclass SidebarItemComponent extends React.Component{\n    \n\n\n    render(){\n\n        const {_index, _note, classes, selectedNoteIndex } = this.props;\n\n\n        return(\n          <div key={_index}>\n              <ListItem className={classes.ListItem}\n                 selected={selectedNoteIndex === _index} \n                   alignItems='flex-start'>\n                       <div \n                       className={classes.textSection}\n                       onClick= {() =>this.selectNote(_note,_index)}>\n                           <ListItemText\n                           primary={_note.title}\n                           secondary={removeHTMLTags(_note.body.substring(0,30)) + '...'}>\n\n                           </ListItemText>\n                        </div>   \n                        <DeleteIcon onClick={()=> this.deleteNote(_note)}\n                        className={classes.DeleteIcon} style={{position:'absolute',right:'0', paddingRight:'5px'}}></DeleteIcon>\n              </ListItem>\n          </div>\n        );\n    }\n\n    selectNote =(n,i) => this.props.selectNote(n,i);\n    deleteNote =(note) =>{\n        if(window.confirm(`Are you sure you want to delete: ${note.title}`)){\n            this.props.deleteNote(note);\n        }\n    } \n}\n\nexport default withStyles(styles)(SidebarItemComponent)","export default function debounce(a,b,c){\n    var d,e;\n    return function(){\n      function h(){\n        d=null;\n        c||(e=a.apply(f,g));\n      }\n      var f=this,g=arguments;\n      return (clearTimeout(d),d=setTimeout(h,b),c&&!d&&(e=a.apply(f,g)),e)\n    }\n  }\n  \n  export function removeHTMLTags (str) {\n    return str.replace(/<[^>]*>?/gm, '');\n  };","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport styles from './styles';\nimport List from '@material-ui/core/List';\nimport { Divider, Button } from '@material-ui/core';\nimport SidebarItemComponent from '../sidebaritem/sidebaritem';\n\nclass SidebarComponent extends React.Component{\n    constructor(){\n        super();\n        this.state={\n            addingNote:false,\n            title:null\n        };\n    }\n\n    render(){\n\n        const{notes,classes,selectedNoteIndex} = this.props;\n\n        if(notes){\n            return(\n                <div className={classes.SidebarContainer} style={{width: 20 +'%', backgroundColor:'rgb(84, 147, 255)'}}>\n                    <button\n                    onClick={this.newNoteBtnClick}\n                    className={classes.newNoteBtn }>{this.state.addingNote ? 'Cancel' : 'New Note'} </button>\n                    {\n                        this.state.addingNote ?\n                        <div>\n                            <input type='text'\n                            className={classes.newNoteInput}\n                            placeholder='Enter note title'\n                            onKeyUp={(e) => this.updateTitle(e.target.value)}>\n                            </input>\n                            <button className={classes.newNoteSubmitBtn}\n                            onClick={this.newNote}>Submit Note\n        \n                            </button>\n                        </div> : \n                        null\n                    }\n        \n                    <List>\n                        {\n                            notes.map((_note,_index) =>{\n                                return(\n                                    <div key={_index}>\n                                        <SidebarItemComponent \n                                        _note = {_note}\n                                        _index ={_index}\n                                        selectedNoteIndex={selectedNoteIndex}\n                                        selectNote={this.selectNote}\n                                        deleteNote={this.deleteNote}>\n        \n                                        </SidebarItemComponent>\n                                        <Divider></Divider>\n                                    </div>\n                                )\n                            })\n                        }\n                    </List>\n        \n                </div>\n                );\n        }else{\n            return(<div>Add a note!</div>) ;\n        }\n    }\n\n    newNoteBtnClick = () =>{\n        this.setState({title:null, addingNote: !this.state.addingNote});\n    }\n\n    updateTitle = (txt) => {\n        this.setState({title:txt });\n    }\n\n    newNote =() =>{\n        this.props.newNote(this.state.title);\n        this.setState({title:null, addingNote:false});\n    }\n\n    selectNote = (n,i) => this.props.selectNote(n,i);\n    deleteNote = (note) => this.props.deleteNote(note);     \n\n\n}\n\n\n\nexport default withStyles(styles)(SidebarComponent);","const styles = theme => ({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      height: 'calc(100% - 35px)',\n      position: 'absolute',\n      left: '0',\n      width: '300px',\n      boxShadow: '0px 0px 2px black'\n    },\n    titleInput: {\n      height: '50px', \n      boxSizing: 'border-box',\n      border: 'none',\n      padding: '5px',\n      fontSize: '24px',\n      width: 'calc(100% - 300px)',\n      backgroundColor: '#29487d',\n      color: 'white',\n      paddingLeft: '57px'\n    },\n    editIcon: {\n      position: 'absolute',\n      left: '280px',\n      top: '15px',\n      color: 'white',\n      width: '0.9em',\n      height: '10'\n    },\n    editorContainer: {\n      height: '100%',\n      boxSizing: 'border-box'\n    }\n  });\n  \n  export default styles;","import React from 'react';\nimport ReactQuill from 'react-quill';\nimport debounce from '../helpers';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport {withStyles} from '@material-ui/core/styles';\nimport styles from './styles';\n\nclass EditorComponent extends React.Component{\n    constructor() {\n        super();\n        this.state ={\n            text:'',\n            title:'',\n            id:''\n        };\n    }\n\n    componentDidMount=()=>{\n        this.setState({\n            text: this.props.selectedNote.body,\n            title: this.props.selectedNote.title,\n            id: this.props.selectedNote.id\n        });\n    }\n\n    componentDidUpdate= () =>{\n        if(this.props.selectedNote.id !== this.state.id){\n            this.setState({\n                text: this.props.selectedNote.body,\n                title: this.props.selectedNote.title,\n                id: this.props.selectedNote.id\n            });\n        }\n    }\n    render(){\n\n        const{classes} = this.props;\n\n        return(\n           <div className={classes.EditorContainer} style={{width:80+ '%'}}>\n               <BorderColorIcon className={classes.editIcon}></BorderColorIcon>\n               <input className={classes.titleInput}\n               placeholder='Note title..'\n               value={this.state.title? this.state.title : ''}\n               onChange={(e)=> this.updateTitle(e.target.value)}>\n               </input>\n              <ReactQuill \n              value={this.state.text} \n              onChange={this.updateBody}> \n              \n              </ReactQuill>  \n            \n           </div>\n     \n        );\n    }\n\n    \n\n    updateBody = async(val) =>{\n        await this.setState({text:val});\n        this.update();\n    };\n\n    updateTitle= async(txt) =>{\n        await this.setState({title:txt});\n        this.update();\n    };\n    update = debounce(()=>{\n       this.props.noteUpdate(this.state.id, {\n           title : this.state.title,\n           body: this.state.text  \n       }) \n    },1500);\n}\n\n\nexport default withStyles(styles)(EditorComponent);","import React from 'react';\nimport SidebarComponent from './sidebar/sidebar';\nimport EditorComponent from './editor/editor';\nimport './App.css';\n\nconst firebase = require('firebase');\nclass App extends React.Component{\n  \n  constructor(){\n    super();\n    this.state = {\n      selectedNoteIndex: null,\n      selectedNote: null,\n      notes:null \n\n    };\n  }\n\n  render(){\n    return(\n      <div className=\"app-container\">\n        <SidebarComponent selectedNoteIndex= {this.state.selectedNoteIndex}\n        notes= {this.state.notes}\n        deleteNote={this.deleteNote}\n        selectNote={this.selectNote}\n        newNote ={this.newNote}></SidebarComponent>\n        {\n          this.state.selectedNote ?\n          <EditorComponent selectedNote={this.state.selectedNote}\n        selectedNoteIndex={this.state.selectedNoteIndex}\n        notes={this.state.notes}\n        noteUpdate={this.noteUpdate}></EditorComponent> :\n        null\n        }\n\n      </div>\n    );\n  }\n\n  componentDidMount = () => { \n     firebase\n      .firestore()\n      .collection('notes')\n      .onSnapshot(serverUpdate =>{\n        const notes = serverUpdate.docs.map(_doc =>{\n          const data = _doc.data();\n          data['id'] = _doc.id;\n          return data;\n        });\n        console.log(notes);\n        this.setState({notes:notes});\n      });\n  }\n\n  selectNote=(note,indexedDB) => this.setState({selectedNoteIndex: indexedDB, selectedNote:note});\n  noteUpdate =(id,noteObj)=>{\n    firebase\n      .firestore()\n      .collection('notes')\n      .doc(id)\n      .update({\n        title: noteObj.title,\n        body: noteObj.body,\n        timestamp: firebase.firestore.FieldValue.serverTimestamp()\n      });\n  }\n\n  newNote = async(title) =>{\n    const note ={\n      title:title,\n      body:''\n    };\n    const newFromDB= await firebase\n    .firestore()\n    .collection('notes')\n    .add({\n      title:note.title,\n      body: note.body,\n      timestamp:firebase.firestore.FieldValue.serverTimestamp()\n    }); \n    const newID = newFromDB.id;\n    await this.setState({notes:[...this.state.notes,note]});\n    const newNoteIndex = this.state.notes.indexOf(this.state.notes.filter(_note=>_note.id===newID)[0]);\n    this.setState({selectedNote: this.state.notes[newNoteIndex],selectedNoteIndex:newNoteIndex});\n\n\n\n  }\n\n  deleteNote = async(note) =>{\n    const noteIndex = this.state.notes.indexOf(note);\n    await this.setState({ notes:this.state.notes.filter(_note => _note !==note)});\n    if(this.state.selectedNoteIndex === noteIndex){\n      this.setState({selectedNoteIndex:null, selectedNote:null});\n\n    }else{\n      this.state.notes.length>1? \n        this.selectNote(this.state.notes[this.state.selectedNoteIndex -1], this.state.selectedNoteIndex -1)\n        :this.setState({selectedNoteIndex:null, selectedNote:null});\n    }\n\n    firebase\n    .firestore()\n    .collection('notes')\n    .doc(note.id)\n    .delete();\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst firebase = require(\"firebase\");\nrequire('firebase/firestore');\n\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCZI-oaA75aT1cMMxR1w4xRsQLYEeZyLEo\",\n  authDomain: \"evernote-clone-304cf.firebaseapp.com\",\n  databaseURL: \"https://evernote-clone-304cf.firebaseio.com\",\n  projectId: \"evernote-clone-304cf\",\n  storageBucket: \"evernote-clone-304cf.appspot.com\",\n  messagingSenderId: \"346406016194\",\n  appId: \"1:346406016194:web:8c4f26e41411d658a6d75b\",\n  measurementId: \"G-2XBF006SZ3\"\n});\n\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('evernote-container')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}